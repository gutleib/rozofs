/*

 File generated by ../../tools/rozofsmount_netdata.py from rozofsmount_netdata.input

 Copyright (c) 2010 Fizians SAS. <http://www.fizians.com>
 This file is part of Rozofs.

 Rozofs is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published
 by the Free Software Foundation, version 2.

 Rozofs is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see
 <http://www.gnu.org/licenses/>.
 */
#ifndef _ROZOFSMOUNT_NETDATA_H
#define _ROZOFSMOUNT_NETDATA_H

#include <stdlib.h>
#include <stdint.h>
#include <string.h>
#include <errno.h>
#include <libconfig.h>
#include <unistd.h>
#include <inttypes.h>
#include <sys/types.h>
#include <dirent.h>
void rozofsmount_netdata_read(char * fname);

int rozofsmount_netdata_does_file_exist(char * fname);

/*_______________________________
** ENUM definion
*/

/*_______________________________
** rozofsmount_netdata structure
*/
typedef struct _rozofsmount_netdata_t {

  /*
  ** global scope configuration parameters
  */

  // Whether to display counts graph
  int32_t     display_count;
  // Whether to display duration graph
  int32_t     display_duration;
  // Whether to display bytes graph
  int32_t     display_duration;

  /*
  ** count scope configuration parameters
  */

  // Count to display
  int32_t     display_count_lookup;
  int32_t     display_count_lookup_agg;
  int32_t     display_count_forget;
  int32_t     display_count_getattr;
  int32_t     display_count_setattr;
  int32_t     display_count_readlink;
  int32_t     display_count_mknod;
  int32_t     display_count_mkdir;
  int32_t     display_count_unlink;
  int32_t     display_count_rmdir;
  int32_t     display_count_symlink;
  int32_t     display_count_rename;
  int32_t     display_count_open;
  int32_t     display_count_link;
  int32_t     display_count_read;
  int32_t     display_count_write;
  int32_t     display_count_flush;
  int32_t     display_count_release;
  int32_t     display_count_opendir;
  int32_t     display_count_readdir;
  int32_t     display_count_releasedir;
  int32_t     display_count_fsyncdir;
  int32_t     display_count_statfs;
  int32_t     display_count_setxattr;
  int32_t     display_count_getxattr;
  int32_t     display_count_listxattr;
  int32_t     display_count_removexattr;
  int32_t     display_count_access;
  int32_t     display_count_create;
  int32_t     display_count_getlk;
  int32_t     display_count_setlk;
  int32_t     display_count_setlk_int;
  int32_t     display_count_ioctl;
  int32_t     display_count_clearlkowner;
  // Duration to display
  int32_t     display_count_lookup;
  int32_t     display_count_lookup_agg;
  int32_t     display_count_forget;
  int32_t     display_count_getattr;
  int32_t     display_count_setattr;
  int32_t     display_count_readlink;
  int32_t     display_count_mknod;
  int32_t     display_count_mkdir;
  int32_t     display_count_unlink;
  int32_t     display_count_rmdir;
  int32_t     display_count_symlink;
  int32_t     display_count_rename;
  int32_t     display_count_open;
  int32_t     display_count_link;
  int32_t     display_count_read;
  int32_t     display_count_write;
  int32_t     display_count_flush;
  int32_t     display_count_release;
  int32_t     display_count_opendir;
  int32_t     display_count_readdir;
  int32_t     display_count_releasedir;
  int32_t     display_count_fsyncdir;
  int32_t     display_count_statfs;
  int32_t     display_count_setxattr;
  int32_t     display_count_getxattr;
  int32_t     display_count_listxattr;
  int32_t     display_count_removexattr;
  int32_t     display_count_access;
  int32_t     display_count_create;
  int32_t     display_count_getlk;
  int32_t     display_count_setlk;
  int32_t     display_count_setlk_int;
  int32_t     display_count_ioctl;
  int32_t     display_count_clearlkowner;
  // Bytes to display   
  int32_t     display_bytes_read;
  int32_t     display_bytes_write;
} rozofsmount_netdata_t;

extern rozofsmount_netdata_t rozofsmount_netdata;

/*_______________________________
** ENUM macro
*/
#endif
